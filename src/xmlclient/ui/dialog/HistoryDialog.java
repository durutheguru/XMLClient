/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package xmlclient.ui.dialog;

import java.util.Iterator;
import java.util.ArrayList;

import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import xmlclient.History;
import xmlclient.ui.ActionLabel;
import xmlclient.ui.ClientFrame;

/**
 *
 * @author Duru Dumebi Julian
 */
public class HistoryDialog extends javax.swing.JDialog {

    /**
     * Creates new form HistoryDialog
     */
    public HistoryDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        addHistory();
        setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setOpacity(0.8F);
        setResizable(false);

        jScrollPane1.setBorder(null);

        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(mainPanel);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(clearButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 241, Short.MAX_VALUE)
                        .addComponent(closeButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton)
                    .addComponent(clearButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "Are you sure you want to clear history?", "Confirm", 
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            History.clearHistory();
            addHistory();
        }
    }//GEN-LAST:event_clearButtonActionPerformed

    private void addHistory(){
        mainPanel.removeAll();
        ArrayList<String> history = History.getHistory();
        if (history.isEmpty()){
            mainPanel.add(new JLabel("No items in history"));
            return;
        }
        
        int size = history.size();
        for (int i = size - 1; i >= 0; i--)
            mainPanel.add(new HistoryLabel(history.get(i)));        
    }
    
    private class HistoryLabel extends ActionLabel {
                
        private String query;
        
        public HistoryLabel(String s){
            setText("<br />" + s + "<br />");
            query = s;
            setClickAction(new AbstractAction() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    ClientFrame.getInstance().getIFrame().setHistoryQuery(query, true);
                    dispose();
                }
                
            });
        }
        
        public String getQuery(){
            return query;
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables
}
