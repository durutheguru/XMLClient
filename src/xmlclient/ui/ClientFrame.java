/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package xmlclient.ui;

import java.awt.Component;
import java.awt.event.WindowEvent;

import java.io.IOException;

import java.util.Date;
import java.util.Observer;
import java.util.Observable;

import javax.swing.JOptionPane;
import javax.swing.JInternalFrame;

import xmlclient.net.Client;
import xmlclient.xml.XMLTableModel;
import xmlclient.ui.dialog.Message;
import xmlclient.ui.dialog.ServerAddrDialog;
import xmlclient.ui.dialog.TipsDialog;

/**
 *
 * @author Duru Dumebi Julian
 */
public class ClientFrame extends javax.swing.JFrame implements Observer{

    private static ClientFrame instance;
    
    private MainIFrame iFrame;
    
    /**
     * Creates new form ClientFrame
     */
    private ClientFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem3 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        connectButton = new javax.swing.JButton();
        disconnectButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        deskPane = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        tipsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("XMLClient");
        setExtendedState(MAXIMIZED_BOTH);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(250, 503));

        logArea.setEditable(false);
        logArea.setColumns(20);
        logArea.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        logArea.setLineWrap(true);
        logArea.setRows(5);
        logArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(logArea);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Client Log");

        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        disconnectButton.setText("Disconnect");
        disconnectButton.setEnabled(false);
        disconnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(disconnectButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(connectButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(connectButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(disconnectButton)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.LINE_END);

        jPanel2.setPreferredSize(new java.awt.Dimension(867, 30));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 867, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);
        getContentPane().add(deskPane, java.awt.BorderLayout.CENTER);

        fileMenu.setText("File");

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        jMenuBar1.add(fileMenu);

        helpMenu.setText("Help");

        tipsMenuItem.setText("Tips");
        tipsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipsMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(tipsMenuItem);

        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        // TODO add your handling code here:
        String[] details = ServerAddrDialog.getServerDetails(this);
        if (details != null){
            try {
                Client.runClient(details[0], Integer.parseInt(details[1]));
                Client.getInstance().addObserver(this);
                connectButton.setEnabled(false);
                disconnectButton.setEnabled(true);
                
                addMainIFrame();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Unable to connect to the specified host", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_connectButtonActionPerformed

    private void disconnectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnectButtonActionPerformed
        // TODO add your handling code here:        
        try{
            if (JOptionPane.showConfirmDialog(this, "Are you sure?", "Confirm", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
                Client.stopClient();
        }
        catch(IOException io){
            JOptionPane.showMessageDialog(this, "An error occured while attempting to disconnect from the server", "Error", JOptionPane.ERROR_MESSAGE);
            appendMessage("ERROR: " + io.getMessage());
        }
        updateConnectionStatus();
    }//GEN-LAST:event_disconnectButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "Are you sure?", "Confirm", JOptionPane.YES_NO_OPTION)
                == JOptionPane.YES_OPTION){
            setVisible(false);
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        // TODO add your handling code here:
        formWindowClosing(new WindowEvent(this, evt.getID()));
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void tipsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipsMenuItemActionPerformed
        // TODO add your handling code here:
        new TipsDialog(this, true).setVisible(true);
    }//GEN-LAST:event_tipsMenuItemActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        // TODO add your handling code here:
        Message.showMessageDialog("This application allows you to send SQL requests to a server.", "About", this);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void updateConnectionStatus(){        
        XMLTableModel.getInstance().clearData();

        disconnectButton.setEnabled(false);
        connectButton.setEnabled(true);
    }
    
    private void addMainIFrame(){
        for (JInternalFrame f : deskPane.getAllFrames()){
            f.setVisible(false);
            f.dispose();
        }

        MainIFrame frame = new MainIFrame();
        if (iFrame != null){
            frame.setLocation(iFrame.getX(), iFrame.getY());
            frame.setSize(iFrame.getWidth(), iFrame.getHeight());
        }
        deskPane.add(frame);
        frame.setVisible(true);
        
        iFrame = frame;
    }
    
    public Component getMessageParent(){
        return iFrame == null ? this : iFrame;
    }
    
    public MainIFrame getIFrame(){
        return iFrame;
    }
    
    @Override
    public void update(Observable o, Object arg){
        if (arg != null){
            String s = (String) arg;
            if (s.equals("CLIENT_DISCONNECTED")){
                Message.showErrorDialog("You have been disconnected from the server.", this);
                updateConnectionStatus();
            }
            else
                appendMessage(s);
        }
    }
    
    public void appendMessage(String msg){
        logArea.append(msg + "\n" + new Date(System.currentTimeMillis()) + "\n\n");
        logArea.setCaretPosition(logArea.getText().length());
    }
    
    public synchronized static ClientFrame getInstance(){
        if (instance == null)
            instance = new ClientFrame();
        
        return instance;
    }
            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton connectButton;
    private javax.swing.JDesktopPane deskPane;
    private javax.swing.JButton disconnectButton;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea logArea;
    private javax.swing.JMenuItem tipsMenuItem;
    // End of variables declaration//GEN-END:variables
}
